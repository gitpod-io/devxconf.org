{"name":"Arsh Sharma","company":"Okteto","title":"Developer Experience Engineer","image":{"url":"arsh-sharma.jpeg"},"bio":"Arsh is a Developer Experience Engineer at Okteto. He is active in the open-source community and has contributed to multiple CNCF projects, including Kubernetes, cert-manager, and Kyverno. He received the Kubernetes Contributor Award for his contributions to the project last year. He loves simplifying technical concepts through his blogs and is also fond of sharing his experiences at conferences.","twitter":"rinkiyakedad","linkedin":"arsh4","github":"RinkiyaKeDad","abstract":"\n\t\t<div>\n\t\t  <p>\n\t\t\tOver the last five years, there has been a huge shift in the way applications get deployed\n\t\t\t- from self-hosted infrastructure to the world of cloud and Kubernetes clusters. This\n\t\t\tchange in deployment practices brought with it a lot of new things to the world developers\n\t\t\t- containers, cloud provider configurations, staging environments, to name a few. Instead\n\t\t\tof coding monoliths, we started to see a shift towards cloud-native applications\n\t\t\tconsisting of multiple microservices.\n\t\t  </p>\n\t\t  <p>\n\t\t\tSo while the way of application deployment has advanced, the workflows and tooling for\n\t\t\tdevelopment have remained stagnant. They didn't adapt completely or feel \"native\" to this\n\t\t\tworld of cloud-native applications. This led to an unpleasant developer experience\n\t\t\tinvolving a massive loss in developer productivity.\n\t\t  </p>\n\t\t  <p>\n\t\t\tThis talk is going to be about how cloud based remote development environments provide a\n\t\t\tsolution to this problem. A new development workflow solution that feels native to the\n\t\t\tmultiple microservices-based applications we see being developed these days. The talk will\n\t\t\tcover what these environments are, how they deliver a more pleasant developer experience,\n\t\t\tand how folks can get started using them with the help of open source tools like Okteto\n\t\t\tCLI.\n\t\t  </p>\n\t\t</div>\n\t  "}