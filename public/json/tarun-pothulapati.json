{"name":"Tarun Pothulapati","title":"Engineer","company":"Gitpod","image":{"url":"tarun-pothulapati.jpg"},"bio":"Tarun Pothulapati is an Engineer at Gitpod working on democratising cloud developer environments. Previously, He was a maintainer of Linkerd, an open source, CNCF Incubated Service Mesh project. He also spends his time contributing to other OSS projects like Tracing, etc. Apart from work, He’s trying to be a marathon runner, and is a big coffee enthusiast.","twitter":"tarrooon","linkedin":"tpothulapati","github":"pothulapati","abstract":"\n\t\t<div>\n\t\t  <p>\n\t\t\t<strong>Remote development in a remote-first world</strong>\n\t\t  </p>\n\t\t  <p>\n\t\t\tIs your development environment a pet? Convert that pet into cattle by going remote! Our\n\t\t\tdevelopment environments continue to become more and more complex to set up. Each project\n\t\t\twe work on has a unique set of dependencies and keeping everything up to date can be a\n\t\t\tfull time job. With Kubernetes, we made the transition from services operating on pet-like\n\t\t\tinfrastructure to cattle. By packaging dependencies and spinning up on-the-fly\n\t\t\tenvironments, we can make the same transition for development environments.\n\t\t  </p>\n\t\t  <p>\n\t\t\tIn this talk, you will learn where remote development environments have been, where they\n\t\t\tare today and where they’re going in the future. We will discuss why right now is a\n\t\t\tperfect time to adopt this new style of development and provide a clear path to adopting\n\t\t\tthe best practices required to convert your pet-like development environment into cattle.\n\t\t  </p>\n\t\t  <p>The following points will be covered in depth:</p>\n\t\t  <ul>\n\t\t\t<li>Problem space that remote development environments solve, and it’s approach.</li>\n\t\t\t<li>How VS Code Remote IDE, JetBrains Fleet, etc work.</li>\n\t\t\t<li>Code from Anywhere, Any Device (due to Browser support)</li>\n\t\t\t<li>On-Demand, Development environments</li>\n\t\t\t<li>\n\t\t\t  Standardisation of developer environments with formats like devContainer.json,\n\t\t\t  gitpod.yml, etc to provide project specific environments.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t  How this model goes very well with OSS development where you want folks to spend as less\n\t\t\t  time on the configuration of dev environment\n\t\t\t</li>\n\t\t  </ul>\n\t\t  <p>\n\t\t\tBy the end of this talk, Audiences will leave with the past, present and future of Remote\n\t\t\tDeveloper Environments, and have an understanding of how they can make use of it in their\n\t\t\texisting projects and companies. Instead of focusing on the specific implementation, tools\n\t\t\ton how it's done, we focus on the concepts itself so that the audience are free to choose\n\t\t\twhatever implementations that they are comfortable with.\n\t\t  </p>\n\t\t</div>\n\t  "}