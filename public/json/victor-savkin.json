{"name":"Victor Savkin","title":"Co-founder","company":"Nrwl","image":{"url":"victor-savkin.jpeg"},"bio":"Nrwl co-founder, ex-Googler, ex-Angular core. Work on dev tools for TS/JS. Nx and Nx Cloud creator.","twitter":"victorsavkin","linkedin":"victorsavkin","github":"vsavkin","abstract":"\n\t\t<div>\n\t\t  <p>\n\t\t\t<strong>The balancing act of delivering high quality DX</strong>\n\t\t  </p>\n\t\t  <p>\n\t\t\tDesigning a general-purpose build system involves making a lot of trade-offs: tool-ability\n\t\t\tvs. expressiveness, efficiency vs. ease of learning, lean configuration vs.\n\t\t\tdiscoverability, extensibility vs. API surface. These are in a constant conflict, making\n\t\t\tit a balancing act of driving coherence while ensuring high-quality DX. Such undertaking\n\t\t\tcan be challenging unless you have an explicit set of design principles to help guide you.\n\t\t  </p>\n\t\t  <p>\n\t\t\tIn this talk, I'll show what such principles look like on the example of Nx, an extensible\n\t\t\tbuild system I've been leading for the past 5 years.\n\t\t  </p>\n\t\t</div>\n\t  "}